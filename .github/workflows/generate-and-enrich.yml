name: Generate and Update SBOM

on:
  workflow_call:
    inputs:
      job-prefix:
        description: "Prefix for the job name"
        default: "ospo"
        required: false
        type: string
      scanner-image:
        description: "Image used for scanning the repository."
        default: "ghcr.io/cyclonedx/cdxgen:v11.2.0"
        required: false
        type: string
      update-image:
        description: "Image containing the script for updating the SBOM."
        default: "registry.cern.ch/code-scanners/sbom-helper:latest"
        required: false
        type: string
      artifact:
        description: "Artifact file to be scanned."
        default: ""
        required: false
        type: string
      generate-output:
        description: "Output file from generate."
        default: "bom.cdx.json"
        required: false
        type: string
      options:
        description: "Options passed to cdxgen."
        default: ""
        required: false
        type: string
      server-url:
        description: "DependencyTrack instance URL."
        default: ""
        required: false
        type: string
      project-path:
        description: "Path to project."
        default: "."
        required: false
        type: string
      cyclonedx-version:
        description: "CycloneDX spec version."
        default: "1.4"
        required: false
        type: string
      annotator:
        description: "Name of the person running the action."
        default: "${{ github.actor }}"
        required: false
        type: string
      url:
        description: "URL of the project."
        default: "${{ github.repositoryUrl }}"
        required: false
        type: string
      unit:
        description: "Organic unit of the person running the action."
        default: ""
        required: false
        type: string
      contact:
        description: "Email of the responsible for the service."
        default: ""
        required: false
        type: string
      app-name:
        description: "Name of the service project."
        default: "${{ github.event.repository.name }}"
        required: false
        type: string
      service-element:
        description: "Name of the service element as appears in ServiceNow."
        default: ""
        required: false
        type: string

jobs:
  generate:
    name: ${{ inputs.job-prefix }} generate
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.scanner-image }}
      options: --entrypoint ""
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate SBOM
        working-directory: ${{ inputs.project-path }}
        run: |
          node /opt/cdxgen/bin/cdxgen.js \
            -o "${{ inputs.generate-output }}" \
            --author "${{ github.actor }}" \
            ${{ inputs.options }} \
            --spec-version "${{ inputs.cyclonedx-version }}"
            
      - name: Check files generate
        working-directory: ${{ inputs.project-path }}
        run: ls -l
        
      - name: Upload generated SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: ${{ inputs.project-path }}/${{ inputs.generate-output }}

  update:
    name: ${{ inputs.job-prefix }} update
    runs-on: ubuntu-latest
    needs: generate
    container:
      image: ${{ inputs.update-image }}
      options: --entrypoint ""
    steps:
      - name: Download generated SBOM
        uses: actions/download-artifact@v4
        with:
          name: sbom
          path: ${{ inputs.project-path }}

      - name: Run SBOM helper update
        env:
          ANNOTATOR: ${{ inputs.annotator }}
          URL: ${{ inputs.url }}
          UNIT: ${{ inputs.unit }}
          CONTACT: ${{ inputs.contact }}
          APP_NAME: ${{ inputs.app-name }}
          SERVICENOW_ELEMENT: ${{ inputs.service-element }}
        run: |
          python /app/src/sbom-helper/main.py --env -i "${{ inputs.project-path }}/${{ inputs.generate-output }}"
      
      - name: Check files update
        working-directory: ${{ inputs.project-path }}/output
        run: ls -l
        
      - name: Upload updated SBOM
        uses: actions/upload-artifact@v4
        with:
          name: updated-sbom
          path: ${{ inputs.project-path }}/output/updated_${{ inputs.generate-output }}